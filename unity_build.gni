# Copyright (c) 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  enable_unity_build = false
}

template("unity_lib") {
  if (
      enable_unity_build
      && (!defined(invoker.disable_unity_build) || !invoker.disable_unity_build)
    ) {
    _gen_cc = "$target_gen_dir/${target_name}.unity.cxx"

    action(_gen_cc) {
      script = "//build/unify_files.py"
      inputs = invoker.sources
      outputs = [ _gen_cc ]
      
      response_file_contents = rebase_path(inputs, root_build_dir)

      args = [
        "-o", rebase_path(_gen_cc, root_build_dir),

        "@{{response_file_name}}",
      ]

      if (defined( invoker.precompiled_header)) {
        args += [ "-p", invoker.precompiled_header ]
      }

      forward_variables_from(invoker, [ "deps" ])
    }

    static_library(target_name) {
      if (defined(invoker.configs)) {
        configs += invoker.configs
      }
      forward_variables_from(invoker,
                             "*",
                             [
                               "sources",
                               "configs",
                             ])
      sources = [
        _gen_cc,
      ]

      if (defined(deps)) {
        deps += [ ":$_gen_cc" ]
      }
    }
  } else {
    if (defined(invoker.disable_unity_build)) {
      assert(invoker.disable_unity_build || true)
    }
    
    static_library(target_name) {
      if (defined(invoker.configs)) {
        configs += invoker.configs
      }
      forward_variables_from(invoker, "*", [ "configs" ])
    }
  }
}
