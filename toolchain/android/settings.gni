if (is_clang) {
  import("//build/toolchain/clang.gni")
}

declare_args() {
  # Path of the GCC C compiler executable.
  gcc_cc = 0

  # Path of the GCC C++ compiler executable.
  gcc_cxx = 0

  # Path of the Clang C compiler executable.
  # Defaults to either $clang_base_path/bin/clang or clang.
  clang_cc = 0

  # Path of the Clang C++ compiler executable.
  # Defaults to either $clang_base_path/bin/clang++ or clang++.
  clang_cxx = 0

  # Path of the 'readelf' utility.
  readelf = 0

  # Path of the 'ar' utility.
  ar = 0

  # Path of the 'nm' utility.
  nm = 0

  # Android NDK target
  android_ndk_target = "30"
  android_ndk_path = 0

  # sysroot
  sysroot = "$android_ndk_path"
}

if (is_clang && clang_cc == 0) {
  android_end = ""
  if (target_cpu == "armv7a") {
    android_end += "eabi"

    ar = "$clang_base_path/bin/arm-linux-android$android_end-ar"
    readelf = "$clang_base_path/bin/arm-linux-android$android_end-readelf"
    nm = "$clang_base_path/bin/arm-linux-android$android_end-nm"
  } else {
    ar = "$clang_base_path/bin/$target_cpu-linux-android-ar"
    readelf = "$clang_base_path/bin/$target_cpu-linux-android-readelf"
    nm = "$clang_base_path/bin/$target_cpu-linux-android-nm"
  }

  clang_cc = "$clang_base_path/bin/$target_cpu-linux-android$android_end$android_ndk_target-clang.cmd"
  clang_cxx = "$clang_base_path/bin/$target_cpu-linux-android$android_end$android_ndk_target-clang++.cmd"
}
