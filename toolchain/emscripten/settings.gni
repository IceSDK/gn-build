if (is_clang) {
  import("//build/toolchain/clang.gni")
}

declare_args() {
  # Path of the GCC C compiler executable.
  gcc_cc = "gcc"

  # Path of the GCC C++ compiler executable.
  gcc_cxx = "g++"

  # Path of the Clang C compiler executable.
  # Defaults to either $clang_base_path/bin/clang or clang.
  clang_cc = 0

  # Path of the Clang C++ compiler executable.
  # Defaults to either $clang_base_path/bin/clang++ or clang++.
  clang_cxx = 0

  # Path of the 'readelf' utility.
  readelf = "readelf"

  # Path of the 'ar' utility.
  ar = "ar"

  # Path of the 'nm' utility.
  nm = "nm"

  bat_ext = ""
}

if (host_os == "win") {
  bat_ext = ".bat"
}

if (is_clang && clang_cc == 0) {
  if (clang_base_path != "") {
    clang_cc = "$clang_base_path/emscripten/emcc$bat_ext"
    ar = "$clang_base_path/bin/llvm-ar"
  } else {
    clang_cc = "emcc"
  }
}

if (is_clang && clang_cxx == 0) {
  if (clang_base_path != "") {
    clang_cxx = "$clang_base_path/emscripten/em++$bat_ext"
    ar = "$clang_base_path/bin/llvm-ar"
  } else {
    clang_cxx = "em++"
  }
}
